// <auto-generated />
using System;
using BlazingChat.WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazingChat.WebAPI.Migrations
{
    [DbContext(typeof(BlazingChatContext))]
    [Migration("20221101142354_CreateDatabseLcally")]
    partial class CreateDatabseLcally
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("BlazingChat.WebAPI.Models.ChatHistory", b =>
                {
                    b.Property<long>("ChatHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("chat_history_id");

                    b.Property<byte[]>("CreatedDate")
                        .IsRequired()
                        .HasColumnType("DATE")
                        .HasColumnName("created_date");

                    b.Property<long>("FromUserId")
                        .HasColumnType("INT")
                        .HasColumnName("from_user_id");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("message");

                    b.Property<long>("ToUserId")
                        .HasColumnType("INT")
                        .HasColumnName("to_user_id");

                    b.HasKey("ChatHistoryId");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToUserId");

                    b.ToTable("ChatHistory");
                });

            modelBuilder.Entity("BlazingChat.WebAPI.Models.Log", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("log_id");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_date");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("TEXT")
                        .HasColumnName("exception_message");

                    b.Property<string>("LogLevel")
                        .HasColumnType("TEXT")
                        .HasColumnName("log_level");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT")
                        .HasColumnName("source");

                    b.Property<string>("StackTrace")
                        .HasColumnType("TEXT")
                        .HasColumnName("stack_trace");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("LogId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("BlazingChat.WebAPI.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<string>("AboutMe")
                        .HasColumnType("TEXT")
                        .HasColumnName("about_me");

                    b.Property<byte[]>("CreatedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("created_date");

                    b.Property<long?>("DarkTheme")
                        .HasColumnType("INTEGER")
                        .HasColumnName("dark_theme");

                    b.Property<byte[]>("DateOfBirth")
                        .HasColumnType("DATETIME")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email_address");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<long?>("Notifications")
                        .HasColumnType("INTEGER")
                        .HasColumnName("notifications");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("ProfilePicDataUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("profile_pic_data_url");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("profile_picture_url");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT")
                        .HasColumnName("role");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("source");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazingChat.WebAPI.Models.ChatHistory", b =>
                {
                    b.HasOne("BlazingChat.WebAPI.Models.User", "FromUser")
                        .WithMany("ChatHistoryFromUsers")
                        .HasForeignKey("FromUserId")
                        .IsRequired();

                    b.HasOne("BlazingChat.WebAPI.Models.User", "ToUser")
                        .WithMany("ChatHistoryToUsers")
                        .HasForeignKey("ToUserId")
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("BlazingChat.WebAPI.Models.User", b =>
                {
                    b.Navigation("ChatHistoryFromUsers");

                    b.Navigation("ChatHistoryToUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
